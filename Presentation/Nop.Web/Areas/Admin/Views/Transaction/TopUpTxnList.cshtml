@model Nop.Web.Areas.Admin.Models.Transaction.TxnTopUpListViewModel
@inject AdminAreaSettings adminAreaSettings
@using Nop.Services.Helpers;
@{
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;

    var dateFormat = MspHelper.GetGlobalDateFormat("MSP_GlobalUITimeStamp", "yyyy-MM-dd HH:mm:ss");

    var blockChainPrefix = MspHelper.GetBlockchainUrlPrefix();

    //page title
    ViewBag.Title = T("Admin.TransactionList.TopUp").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Top Up");
}

<nop-antiforgery-token />
<form asp-controller="Transaction" asp-action="TopUpTxnList" method="post">
	<div class="content-header clearfix">
		<h1 class="pull-left">
			@T("Admin.TransactionList.TopUp")
		</h1>

		@* MDT-153 MSP requirement 1.2 > Export function to CSV > Transaction Listing → Top Up *@
		<div class="pull-right">
			<button type="submit" name="exportcsvalltopup" class="btn bg-green">
				<i class="fa fa-download"></i>
				@T("Admin.Common.ExportToCsv") 
			</button>
			@*<button type="button" id="exportcsv-selected" class="btn bg-green">
				<i class="fa fa-download"></i>
				@T("Admin.Common.ExportToCsv") ( @T("Admin.Common.Select") )
			</button>*@
			@await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_transaction_list_topup_buttons" })
		</div>
		@* MDT-153 MSP requirement 1.2 > Export function to CSV > Transaction Listing → Top Up *@

		@*<div class="pull-right">
				<a asp-action="Create" class="btn bg-blue">
					<i class="fa fa-plus-square"></i>
					@T("Admin.Common.AddNew")
				</a>
				@await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_discount_list_buttons" })
			</div>*@
	</div>

	<div class="content">
		<div class="form-horizontal">
			<div class="panel-group">
				<div class="panel panel-default panel-search">
					<div class="panel-body">
						<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									<div class="col-md-4">
										<nop-label asp-for="Username" />
									</div>
									<div class="col-md-8">
										<nop-editor asp-for="Username" />
									</div>
								</div>
								<div class=" form-group">
									<div class="col-md-4">
										<nop-label asp-for="TxnId" />
									</div>
									<div class="col-md-8">
										@*<nop-editor asp-for="TxnId" />*@
										<input id="TxnId" type="text" name="TxnId" class="col-md-8 form-control">
									</div>
								</div>
								<div class="form-group">
									<div class="col-md-4">
										<nop-label asp-for="TopUpAmt" />
									</div>
									<div class="col-md-8">
										@*<nop-editor asp-for="TopUpAmt" />*@
										<input id="TopUpAmt" type="text" name="TopUpAmt" class="col-md-8 form-control">
									</div>
								</div>
								<div class="form-group">
									<div class="col-md-4">
										<nop-label asp-for="TopUpMbtcAdd" />
									</div>
									<div class="col-md-8">
										<nop-editor asp-for="TopUpMbtcAdd" />
									</div>
								</div>
							</div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="DateFrom" />
                                    </div>
                                    <div class=" col-md-8">
                                        <nop-editor asp-for="DateFrom" />
                                        @*<input id="DateFrom" style="width: 100%;" value="@Model.DateFrom.Value.ToString("yyyy-MM-dd")"/>*@
                                    </div>
                                </div>
                                <div class=" form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="DateTo" />
                                    </div>
                                    <div class=" col-md-8">
                                        <nop-editor asp-for="DateTo" />
                                        @*<input id="DateTo" style="width: 100%;" value="@Model.DateTo.Value.ToString("yyyy-MM-dd")"/>*@
                                    </div>
                                </div>
                                <div class=" form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="BlockchainTxId" />
                                    </div>
                                    <div class=" col-md-8">
                                        <nop-editor asp-for="BlockchainTxId" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="StatusValue" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="StatusValue" asp-items="Model.Status" />
                                    </div>
                                </div>
                            </div>
						</div>
						<div class="row">
							<div class="col-md-7 col-md-offset-5">
								<button type="button" id="search-txn" class="btn btn-primary btn-search">
									<i class="fa fa-search"></i>
									@T("Admin.Common.Search")
								</button>
							</div>
						</div>
					</div>
				</div>

				<div class="panel panel-default">
					<div class="panel-body">
						<div id="txn-grid"></div>
                        <script type="text/javascript">

						var selectedIds = [];

							$(document).ready(function () {
                                function topup() {
                                    $("#txn-grid").kendoGrid({
                                        dataSource: {
                                            type: "json",
                                            transport: {
                                                read: {
                                                    url: "@Html.Raw(Url.Action("TopUpTxnPagedList", "Transaction"))",
                                                    type: "POST",
                                                    dataType: "json",
                                                    data: additionalData
                                                }
                                            },
                                            schema: {
                                                data: "Data",
                                                total: "Total",
                                                errors: "Errors"
                                                @*model: {
                                                    //id: "Id",
                                                    fields: {
                                                        //Id: { editable: false, type: "number" },
                                                        Username: { editable: false, type: "string" },
                                                        Date: { editable: false, type: "date" },
                                                        TopUpTxId: { editable: false, type: "int" },
                                                        TopUpAmt: { editable: false, type: "decimal" },
                                                        TopUpWalletAdd: { editable: false, type: "string" }
                                                    }
                                                }*@
                                            },
                                            error: function (e) {
                                                display_kendoui_grid_error(e);
                                                // Cancel the changes
                                                this.cancelChanges();
                                            },
                                            pageSize: @(defaultGridPageSize),
                                            serverPaging: true,
                                            serverFiltering: true,
                                            serverSorting: true
                                        },
                                        pageable: {
                                            refresh: true,
                                            //pageSizes : 3
                                            pageSizes: [@(gridPageSizes)],
                                            @await Html.PartialAsync("_GridPagerMessages")
                                        },
                                        scrollable: false,
                                        //dataBound: onDataBound,
                                        columns: [
                                            //                                {
                                            //field: "Id",
                                            //                                    headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                            //                                    headerAttributes: { style: "text-align:center" },
                                            //                                    attributes: { style: "text-align:center" },
                                            //template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                            //                                    width: 50
                                            //                                },
                                            {
                                                field: "Username",
                                                title: "@T("Admin.TransactionList.TopUp.List.Fields.Username")",
                                                width: 200
                                            },
                                            {
                                                field: "Date",
                                                title: "@T("Admin.TransactionList.TopUp.List.Fields.Date")",
                                                width: 200,
                                                type: "date",
                                                format: "{0:@dateFormat}"
                                            },
                                            {
                                                field: "TxId",
                                                title: "@T("Admin.TransactionList.TopUp.List.Fields.TxnId")",
                                                width: 200
                                            },
                                            {
                                                field: "TopUpAmt",
                                                title: "@T("Admin.TransactionList.TopUp.List.Fields.TopUpAmt")",
                                                width: 200
                                            },
                                            {
                                                field: "TopUpWalletAdd",
                                                title: "@T("Admin.TransactionList.TopUp.List.Fields.TopUpMbtcAdd")",
                                                width: 200,
                                            },
                                            @*//wailiang 20190116 MDT-193 \/*@
                                            {
                                                field: "Status",
                                                title: "@T("Admin.TransactionList.TopUp.List.Fields.Status")",
                                                width: 200,
                                            },
                                            {
                                                field: "BlockchainTxId",
                                                title: "@T("Admin.TransactionList.TopUp.List.Fields.BlockchainTxId")",
                                                width: 200,
                                                template: "# if (BlockchainTxId != null ) { # <a href = '@blockChainPrefix#=BlockchainTxId#' target ='_blank'>#=BlockchainTxId#</a> # } #"
                                            },
                                            @*//wailiang 20190116 MDT-193 /\*@
                                        ]
									});

									$('#mastercheckbox').click(function () {
										$('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
									});

									//wire up checkboxes.
									$('#txn-grid').on('change', 'input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]', function (e) {
										var $check = $(this);
										if ($check.is(":checked") == true) {
											var checked = jQuery.inArray($check.val(), selectedIds);
											if (checked == -1) {
												//add id to selectedIds.
												selectedIds.push($check.val());
											}
										} else {
											var checked = jQuery.inArray($check.val(), selectedIds);
											if (checked > -1) {
												//remove id from selectedIds.
												selectedIds = $.grep(selectedIds, function (item, index) {
													return item != $check.val();
												});
											}
										}
										updateMasterCheckbox();
									});

                                }

                                $('#search-txn').click(function () {

                                    var dtFrom = $('#@Html.IdFor(model => model.DateFrom)').val();
                                    var dtTo = $('#@Html.IdFor(model => model.DateTo)').val();

                                    if (dtFrom == '' || dtTo == '')
                                    {
                                        alert("@T("Admin.DateTimeFormat.NoEmpty")");
                                        return;
                                    }

                                    var dtFrom1 = new Date(dtFrom);
                                    var dtTo1 = new Date(dtTo);

                                    if (dtTo1 < dtFrom1)
                                    {
                                        alert("@T("Admin.DateTimeFormat.UnusualDateRange")");
                                        return;
                                    }

                                    topup();
                                    var grid = $('#txn-grid').data('kendoGrid');
                                    grid.dataSource.page(1); //new search. Set page size to 1
                                    //grid.dataSource.read(); we already loaded the grid above using "page" function

									//clear selected checkboxes
									$('.checkboxGroups').attr('checked', false).change();
									selectedIds = [];

                                    return false
                                });

                                $("input[name='TxnId']").TouchSpin({
                                    min: 0,
                                    max: 2147483647,
                                    decimals: 0,
                                    verticalbuttons: true,
                                    prefix: "",
                                    forcestepdivisibility: ""
                                });

                            $("input[name='TopUpAmt']").TouchSpin({
                                //min: -999999999999999999999999999999999999999,
                                    min: 0,
                                    max: 79228162514264337593543950335,
                                    decimals: 3, //always display 4 digits
                                    forcestepdivisibility: "none",
                                    verticalbuttons: true,
                                    prefix: "mBTC"
                            });

                            function additionalData()
                            {
                            var data = {
                                Username: $('#@Html.IdFor(model => model.Username)').val(),
                                DateFrom: $('#@Html.IdFor(model => model.DateFrom)').val(),
                                DateTo: $('#@Html.IdFor(model => model.DateTo)').val(),
                                TxnId: $('#@Html.IdFor(model => model.TxnId)').val(),
                                TopUpAmt: $('#@Html.IdFor(model => model.TopUpAmt)').val(),
                                TopUpMbtcAdd: $('#@Html.IdFor(model => model.TopUpMbtcAdd)').val(),
                                @*//wailiang 20190116 MDT-193 \/*@
                                StatusValue: $('#@Html.IdFor(model => model.StatusValue)').val(),
                                BlockchainTxId: $('#@Html.IdFor(model => model.BlockchainTxId)').val()
                                @*//wailiang 20190116 MDT-193 /\*@
                            };
                            addAntiForgeryToken(data);
                            return data;
                            }
                            @*Set Filtering*@


                            //$("#DateFrom").kendoDatePicker({
                            //    //value: "2018-09-10",
                            //    dateInput: true,
                            //    format: "yyyy-MM-dd"
                            //});

                            //$("#DateTo").kendoDatePicker({
                            //    //value: kendo.toString(kendo.parseDate(dtTo1, 'MM/dd/yyyy')),
                            //    dateInput: true,
                            //    format: "yyyy-MM-dd"
                            //});

                                //search button


                                $("".concat(
                                    "#@Html.IdFor(model => model.Username),",
                                    "#@Html.IdFor(model => model.DateFrom),",
                                    "#@Html.IdFor(model => model.DateTo),",
                                    "#@Html.IdFor(model => model.TxnId),",
                                    "#@Html.IdFor(model => model.TopUpAmt),",
                                    "#@Html.IdFor(model => model.TopUpMbtcAdd),",
                                    "#@Html.IdFor(model => model.StatusValue),",
                                    "#@Html.IdFor(model => model.BlockchainTxId)"
                                    )
                                ).keydown(function (event) {
                                        if (event.keyCode === 13) {
                                            $("#search-txn").click();
                                            return false;
                                        }
                                    });

                                    @*Kendo-Grid*@

                        });
							function onDataBound(e) {
								$('#txn-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').each(function () {
									var currentId = $(this).val();
									var checked = jQuery.inArray(currentId, selectedIds);
									//set checked based on if current checkbox's value is in selectedIds.
									$(this).attr('checked', checked > -1);
								});

								updateMasterCheckbox();
							}

							function updateMasterCheckbox() {
								var numChkBoxes = $('#txn-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').length;
								var numChkBoxesChecked = $('#txn-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]:checked').length;
								$('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
							}

                        </script>


						@*<script type="text/javascript">


							</script>*@

					</div> @*grid panel-body*@
				</div>@*panel panel-default*@
			</div>@*panel-group*@
		</div>@*form-horizontal*@
	</div>@*content*@
</form>

@*export selected (csv). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
<form asp-controller="Transaction" asp-action="ExportCsvSelectedTopup" method="post" id="export-csv-selected-form">
	<input type="hidden" id="selectedIds" name="selectedIds" value="" />
</form>
<script type="text/javascript">
	$(document).ready(function () {
		$('#exportcsv-selected').click(function (e) {
			e.preventDefault();
			var ids = selectedIds.join(",");
			$('#export-csv-selected-form #selectedIds').val(ids);
			$('#export-csv-selected-form').submit();
			return false;
		});
	});
</script>

@*export selected (XML). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@*<form asp-controller="Transaction" asp-action="ExportXmlSelected" method="post" id="export-xml-selected-form">
		<input type="hidden" id="selectedIds" name="selectedIds" value="" />
	</form>
	<script type="text/javascript">
		$(document).ready(function () {
			$('#exportxml-selected').click(function (e) {
				e.preventDefault();
				var ids = selectedIds.join(",");
				$('#export-xml-selected-form #selectedIds').val(ids);
				$('#export-xml-selected-form').submit();
				return false;
			});
		});
	</script>*@

@*export selected (Excel). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@*<form asp-controller="Transaction" asp-action="ExportExcelSelected" method="post" id="export-excel-selected-form">
		<input type="hidden" id="selectedIds" name="selectedIds" value="" />
	</form>
	<script type="text/javascript">
		$(document).ready(function () {
			$('#exportexcel-selected').click(function (e) {
				e.preventDefault();
				var ids = selectedIds.join(",");
				$('#export-excel-selected-form #selectedIds').val(ids);
				$('#export-excel-selected-form').submit();
				return false;
			});
		});
	</script>*@