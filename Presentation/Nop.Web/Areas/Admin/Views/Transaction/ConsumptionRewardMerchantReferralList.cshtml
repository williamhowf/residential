@model ConsumptionRewardMerchantReferralListModel
@inject AdminAreaSettings adminAreaSettings
@using Nop.Services.Helpers;
@{
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;

    var dateFormat = MspHelper.GetGlobalDateFormat("MSP_GlobalUITimeStamp", "yyyy-MM-dd HH:mm:ss"); @*//Atiqah 20190212 MDT221*@

    //page title
    ViewBag.Title = T("Admin.TransactionList.ConsumptionRewardMerchantReferral").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Consumption Reward Merchant Referral");
}

<form asp-controller="Transaction" asp-action="ConsumptionRewardMerchantReferralList" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.TransactionList.ConsumptionRewardSelf.Fields.MerchantRefReward")
        </h1>

        @* 20181220 WKK MDT-157		MSP requirement 1.2 > Export function to CSV > Transaction Listing → Task Reward Listing *@
        <div class="pull-right">
            <button type="submit" name="exportcsv" class="btn bg-green">
                <i class="fa fa-download"></i>
                @T("Admin.Common.ExportToCsv")
            </button>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_transaction_list_taskreward_buttons" })
        </div>
        @* 20181220 WKK MDT-157		MSP requirement 1.2 > Export function to CSV > Transaction Listing → Task Reward Listing *@

    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="Username" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="Username" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="PlatformID" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="PlatformID" asp-items="Model.PlatformNameOptions" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="FromDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="FromDate" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="ToDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="ToDate" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="MerchantRefFrom" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="MerchantRefFrom" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="MerchantRefTo" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="MerchantRefTo" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="button" id="search-txn" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Search Panel [E] -->
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="txn-grid"></div>
                        <!-- retrieve data block start -->
                        <script type="text/javascript">

                        </script>

                        <script type="text/javascript">
                            //var selectedIds = [];

                            $(document).ready(function () {

                                //Jerry 20181102 MSP-436 \/
                                var proceed = (('@Model.IsRefreshData').toLowerCase() === 'true');
                                //console.log('proceed: ' + proceed);
                                if (proceed)
                                {
                                    getTrx();
                                    var grid = $('#txn-grid').data('kendoGrid');
                                    grid.dataSource.page(1);
                                }
                                //Jerry 20181102 MSP-436 /\

                                function getTrx() {

                                    $("#txn-grid").kendoGrid({
                                        dataSource: {
                                            type: "json",
                                            transport: {
                                                read: {
                                                    url: "@Html.Raw(Url.Action("ConsumptionRewardMerchantReferralList", "Transaction"))", //ActionName and Controller
                                                    type: "POST",
                                                    dataType: "json",
                                                    data: additionalData
                                                }
                                            },
                                            schema: { //handle data return from controller
                                                data: "Data",
                                                total: "Total",
                                                errors: "Errors",
                                                model: {
                                                    //id: "Id",
                                                    username: "Username",
                                                    //Date: "Date",
                                                    fields: {
                                                        Username: { editable: false, type: "string" },
                                                        Date: { editable: false, type: "date" },
                                                        PlatformName: { editable: false, type: "string" },
                                                        Deposit_Returned: { editable: false, type: "string" },
                                                        Membership_Reward: { editable: false, type: "string" },
                                                        Consumption_Reward: { editable: false, type: "string" },
                                                        Merchant_Ref_Reward: { editable: false, type: "string" },
                                                        Total_Reward: { editable: false, type: "string" }
                                                    }
                                                }
                                            },
                                            error: function (e) {
                                                display_kendoui_grid_error(e);
                                                // Cancel the changes
                                                this.cancelChanges();
                                            },
                                            pageSize: @(defaultGridPageSize),
                                            serverPaging: true,
                                            serverFiltering: true,
                                            serverSorting: true
                                        },
                                        pageable: {
                                            refresh: true,
                                            pageSizes: [@(gridPageSizes)],
                                            @await Html.PartialAsync("_GridPagerMessages")
                                        },
                                        scrollable: false,
                                        columns: [
                                            {
                                                field: "Username",
                                                title: "@T("Admin.TransactionList.ConsumptionRewardSelf.Fields.Username")",
                                                width: 500
                                            },
                                            {
                                                field: "Date",
                                                title: "@T("Admin.TransactionList.ConsumptionRewardSelf.Fields.Date")",
                                                width: 250,
                                                format: "{0: @dateFormat}"
                                            },
                                            {
                                                field: "PlatformName",
                                                title: "@T("Admin.TransactionList.ConsumptionRewardSelf.Fields.PlatformName")",
                                                width: 250
                                            },
                                            {
                                                field: "Merchant_Ref_Reward",
                                                title: "@T("Admin.TransactionList.ConsumptionRewardSelf.Fields.MerchantRefReward")",
                                                width: 250
                                            }
                                        ]
                                    });
                                }



                                //search button
                                $('#search-txn').click(function () {

                                    var dtFrom = $('#@Html.IdFor(model => model.FromDate)').val();
                                    var dtTo = $('#@Html.IdFor(model => model.ToDate)').val();

                                    var dtFrom1 = new Date(dtFrom);
                                    var dtTo1 = new Date(dtTo);

                                    if (dtTo1 < dtFrom1) {
                                        alert("@T("Admin.DateTimeFormat.UnusualDateRange")");
                                        return;
                                    }

                                    getTrx();
                                    var grid = $('#txn-grid').data('kendoGrid');
                                    grid.dataSource.page(1); //new search. Set page size to 1

                                    return false;
                                });

                                function additionalData() {
                                    var data = {
                                        Username: $('#@Html.IdFor(model => model.Username)').val(),
                                        PlatformID: $('#@Html.IdFor(model => model.PlatformID)').val(),
                                        FromDate: $('#@Html.IdFor(model => model.FromDate)').val(),
                                        ToDate: $('#@Html.IdFor(model => model.ToDate)').val(),
                                        MerchantRefFrom: $('#@Html.IdFor(model => model.MerchantRefFrom)').val(),
                                        MerchantRefTo: $('#@Html.IdFor(model => model.MerchantRefTo)').val()
                                    };
                                    addAntiForgeryToken(data);
                                    return data;
								}

								//search button
								$("".concat(
									"#@Html.IdFor(model => model.Username),",
									"#@Html.IdFor(model => model.PlatformID),",
									"#@Html.IdFor(model => model.FromDate),",
									"#@Html.IdFor(model => model.ToDate),",
									"#@Html.IdFor(model => model.MerchantRefFrom),",
									"#@Html.IdFor(model => model.MerchantRefTo)"
									)
								).keydown(function (event)
								{
									if (event.keyCode === 13) {
										$("#search-txn").click();
										return false;
									}
								});

                            });

                        </script>

                    </div>
                </div>
            </div>
        </div>
    </div>
</form>